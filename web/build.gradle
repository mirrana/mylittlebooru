//buildscript {
//    repositories {
//        jcenter()
//    }
//
//    dependencies {
//        classpath 'nu.studer:gradle-jooq-plugin:1.0.+'
//        classpath 'org.apache.derby:derby:10.11.1.1'
//    }
//    configurations.classpath {
//        resolutionStrategy {                            // enforce a specific jOOQ version
//            forcedModules = [
//                    'org.jooq:jooq:3.7.+',
//                    'org.jooq:jooq-meta:3.7.+',
//                    'org.jooq:jooq-codegen:3.7.+'
//            ]
//        }
//    }
//}

plugins {
    id 'nu.studer.jooq' version '3.0.3'
    id 'war'
}

sourceCompatibility = 1.8

dependencies {
    // Logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
    runtime group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.+'

    // Testing
    testCompile group: 'junit', name: 'junit', version: '4.+'

    // Servlet
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.+'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.22.+'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.22.+'
    compile group: 'org.glassfish.jersey.ext', name: 'jersey-servlet-portability', version: '2.22.+'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.22.+'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.22.+'

    // Servlet Filters
    compile 'org.tuckey:urlrewritefilter:4.0.+'

    // Security
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'

    // Database
//    runtime group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'
    jooqRuntime 'postgresql:postgresql:9.1-901-1.jdbc4'
    compile 'org.jooq:jooq:3.11.9'
    compile 'org.jooq:jooq-meta:3.11.9'
    compile 'org.jooq:jooq-codegen:3.11.9'
}

sourceSets {
    main {
        java {
            srcDirs += 'src/main/generated/java'
        }
    }
}

task explodedWar(type: Copy) {
    group = 'build'
    into new File(buildDir, 'exploded-war')
    with war
}

jooq {
    version = '3.11.9'
    edition = 'OSS'
    sample(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://pg1.home.abopu.com:5432/mylittlebooru'
            user = 'booru'
            password = '3uwr8prA'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'recipebook'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
                // ...
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                // ...
            }
            target {
                packageName = 'com.abopu.booru'
                directory = 'src/main/generated'
            }
        }
    }
}

idea {
    module {
        generatedSourceDirs += file('src/main/generated')
    }
}